import sys
from datetime import datetime

_author = "MDomalewski"

if len(sys.argv) != 2:
    print("invalid number of arguments!")
else:
    _task = None
    try:
        _task = int(sys.argv[1])
    except ValueError:
        print("invalid task number!")
        exit()
    _pkg = open(f"Solutions/__init__.py", "a")
    _pkg.write(f"from . import problem_{_task}\n")
    _pkg.close()
    print("Prepped the init file!")

    _solution = open(f"Solutions/problem_{_task}.py", "w")
    _solution.write(
f"""## solution class for Lettcode problem {_task}
## author {_author}, generated by TypicalUsername-ai's leetcode python repository
## created on: {datetime.today()}
##import Structures #uncomment if the task requires a non-basic data structure
class Solution(object):
    ## TODO solution code goes here
    pass
""")
    _solution.close()
    print("Prepped the solution file!")

    _test = open(f"Test/problem_{_task}_test.py", "w")
    _test.write(
f"""## testcase file for Lettcode problem {_task}
## author {_author}, generated by TypicalUsername-ai's leetcode python repository
## created on: {datetime.today()}

## import Structures ##uncomment if the task requires a non-basic data structure
import unittest
from Solutions import problem_{_task}

class Problem_{_task}_test(unittest.TestCase):
    def setUp(self):
        self.solution = problem_{_task}.Solution()

    def test_empty(self):
        self.assert_(self.countTestCases() != 1, "no user-implemented testcases!")

st = unittest.defaultTestLoader.loadTestsFromTestCase(Problem_{_task}_test)
unittest.TextTestRunner().run(st)
"""
    )
    _test.close()
    print("Prepped the test file!")